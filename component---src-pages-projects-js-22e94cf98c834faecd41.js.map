{"version":3,"sources":["webpack://gatsby-starter-hello-world/./src/components/content_page.js","webpack://gatsby-starter-hello-world/./src/components/project_card.js","webpack://gatsby-starter-hello-world/./src/components/project_card.module.css","webpack://gatsby-starter-hello-world/./src/pages/projects.js"],"names":["ContentPage","props","hasHeader","header","headerStyle","background","backgroundSize","brightNavbar","id","className","style","pageTitle","class","grey","children","HomeProject","to","slug","G","image","getImage","title","year","student","frontmatter","name","Projects","data","useStaticQuery","allMarkdownRemark","nodes","map","element","fields"],"mappings":"qMAIe,SAASA,EAAYC,GAClC,IAAMC,EAAa,WAAYD,GAA2B,MAAhBA,EAAME,OAC1CC,EAAc,GAKpB,OAJIF,IACFE,EAAYC,WAAZ,gEAAyFJ,EAAME,OAA/F,IACAC,EAAYE,eAAiB,SAG7B,gBAAC,IAAD,CAAQC,cAAeL,GACrB,uBAAKM,GAAG,gBACN,uBAAKA,GAAG,aAAaC,UAAWP,EAAY,GAAK,QAASQ,MAAON,GAC/D,0BAAKH,EAAMU,YAGb,uBAAKC,MAAK,sBAAuBX,EAAMY,KAAO,OAAS,UACpDZ,EAAMa,c,oGCbF,SAASC,EAAYd,GAClC,OACE,uBAAKQ,UCPW,oCDQd,gBAAC,KAAD,CAAMO,GAAE,aAAef,EAAMgB,MAC3B,gBAAC,EAAAC,EAAD,CACEC,OAAOC,OAASnB,EAAMkB,OACtBV,UCVW,sCDYb,wBAAMA,UCVO,sCDWb,uBAAKA,UCZc,4CDajB,0BACGR,EAAMoB,MADT,IACgB,yBAAIpB,EAAMqB,OAGzBrB,EAAMsB,QACL,yBACE,2CACCtB,EAAMsB,QAAQC,YAAYC,MAG7B,sC,2HEpBG,SAASC,IACtB,IAAMC,GAAOC,QAAe,aA8B5B,OACE,gBAAC,IAAD,CAAajB,UAAU,WAAWR,OAAO,+BACvC,uBAAKM,UAAU,kCACZkB,EAAKE,kBAAkBC,MAAMC,KAAI,SAAAC,GAAO,OACvC,uBAAKvB,UAAU,6CACb,gBAAC,IAAD,CACEY,MAAOW,EAAQR,YAAYH,MAC3BC,KAAMU,EAAQR,YAAYF,KAC1BC,QAASS,EAAQR,YAAYD,QAC7BN,KAAMe,EAAQC,OAAOhB,KACrBE,MAAOa,EAAQR,YAAYL","file":"component---src-pages-projects-js-22e94cf98c834faecd41.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"./layout\"\n\nexport default function ContentPage(props) {\n  const hasHeader = (\"header\" in props) && (props.header != null)\n  const headerStyle = {}\n  if (hasHeader) {\n    headerStyle.background = `linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url(${props.header})`\n    headerStyle.backgroundSize = 'cover'\n  }\n  return (\n    <Layout brightNavbar={!hasHeader}>\n      <div id=\"page-content\">\n        <div id=\"header-top\" className={hasHeader ? '' : 'empty'} style={headerStyle}>\n          <h1>{props.pageTitle}</h1>\n        </div>\n\n        <div class={`content-container ${props.grey ? \"grey\" : \"white\"}`}>\n          {props.children}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport * as ProjectCardStyle from \"./project_card.module.css\"\n\nexport default function HomeProject(props) {\n  return (\n    <div className={`${ProjectCardStyle.card}`}>\n      <Link to={`/projects/${props.slug}`}>\n        <GatsbyImage\n          image={getImage(props.image)}\n          className={`${ProjectCardStyle.image}`}\n        />\n        <span className={ProjectCardStyle.arrow}></span>\n        <div className={`${ProjectCardStyle.cardContent}`}>\n          <h2>\n            {props.title} <i>{props.year}</i>\n          </h2>\n\n          {props.student ? (\n            <p>\n              <strong>Student: </strong>\n              {props.student.frontmatter.name}\n            </p>\n          ) : (\n            <></>\n          )}\n        </div>\n      </Link>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport const card = \"project_card-module--card--2E_AH\";\nexport const image = \"project_card-module--image--3XudH\";\nexport const cardContent = \"project_card-module--card-content--Jw7Wr\";\nexport const arrow = \"project_card-module--arrow--zAImz\";","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nimport ContentPage from \"../components/content_page\"\nimport ProjectCard from \"../components/project_card\"\n\nexport default function Projects() {\n  const data = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(\n        filter: { fields: { category: { eq: \"projects\" } } }\n        sort: { order: DESC, fields: fields___sortYear }\n      ) {\n        nodes {\n          frontmatter {\n            title\n            year\n            student {\n              frontmatter {\n                name\n              }\n            }\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 600, height: 385)\n              }\n            }\n          }\n          fields {\n            category\n            slug\n            sortYear\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <ContentPage pageTitle=\"Projects\" header=\"/images/projects_header.jpg\">\n      <div className=\"columns is-mobile is-multiline\">\n        {data.allMarkdownRemark.nodes.map(element => (\n          <div className=\"column is-one-third-tablet is-full-mobile\">\n            <ProjectCard\n              title={element.frontmatter.title}\n              year={element.frontmatter.year}\n              student={element.frontmatter.student}\n              slug={element.fields.slug}\n              image={element.frontmatter.image}\n            />\n          </div>\n        ))}\n      </div>\n    </ContentPage>\n  )\n}\n"],"sourceRoot":""}